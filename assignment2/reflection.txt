As I was writing the original version of this program, my intention was very much centered around an object-oriented approach. Because of this, everything was centered in a StyleChecker class. While it did make everything easy to store, using this approach meant that state was mutable and implicitly shared across methods. When I refactored the program, the approach changed from an object oriented approach to a functional approach - each function in the new version is self-contained. For example, instead of appending to a class-level report list, each analysis function returns its own list of strings. Two of the biggest shifts were in immutability and writing pure functions. This functional version of the script is more modular and testable. However, it also required more careful planning up front to ensure that functions receive everything they need as input. Overall, I think that the functional version is cleaner, and makes the code more maintainable overall.